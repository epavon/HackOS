// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack

/**
 * A library that supports various program execution services.
 */
class Sys {

    /** Performs all the initializations required by the OS. */
    function void init() {
		
		do Memory.init();
		do Math.init();
		do Output.init();		
		do Screen.init();
		do Keyboard.init();		
		do Main.main();
		
		do Sys.halt();
		return;
    }

    /** Halts the program execution. */
    function void halt() {
		
		while(true) {}
		return;
    }

    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration) {
		var int i, j, k,a, b, c, delay;
		let i = 0;
		let j = 0;
		let k = 0;
		let a = 0;
		let b = 0;
		let c = 0;
		
		let delay = 16;
		
		while( i < (delay)) {
			while(j < (delay)) {
				while(k < (delay)) {
					let k = k + 1;
					while(a < delay) {
						let a = a + 1;
						while(b < delay) {
							let b = b + 1;
							while(c < delay) {
								let c = c + 1;
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								do Sys.runLoop(delay);do Sys.runLoop(delay);
								
							}
						}
					}					
				}
				let j = j + 1;
			}
			let i = i + 1;
		}
		
		if(duration > 0)
		{
			do Sys.wait(duration - 300);
		}			
		
		return;
    }
	
	function void runLoop(int loopCounter) {
		var int i, j, k;
		let i = 0;
		let j = 0;
		let k = 0;		
		
		while( i < loopCounter) {
			while(j < loopCounter) {
				while(k < loopCounter) {
					let k = k + 1;
				}
				let j = j + 1;
			}
			let i = i + 1;
		}
		return;
	}

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
		do Output.printString("ERR");
		do Output.printInt(errorCode);
		return;
    }
}
