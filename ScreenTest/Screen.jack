// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 512 rows (indexed 0..511, top to bottom)
 * of 256 pixels each (indexed 0..255, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
	static int currentColor;

    /** Initializes the Screen. */
    function void init() {
		let currentColor = 0;
		return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
		return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
		return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
		var int address;
		var int value;
		var int ithbit;
		var int mask;
		
		let address = (32 * y) + (x / 16);
		let value = Memory.peek(16384 + address);
		let ithbit = Screen.mod(x, 16);
		
		if(currentColor = 1) {
			let mask = Screen.pow(2, ithbit);
			let value = value | mask;
		}
		else {
			let mask = Screen.pow(2, ithbit);
			let mask = ~mask;
			let value = value & mask;
		}
		
		do Memory.poke(address, value);
		return;		
    }
	
	function int mod(int x, int y) {		
		return x - ((x/y) * y);	
	}
	
	function int pow(int x, int y) {
		var int result, i;
		let result = 1;
		let i = 0;
		
		while(i < y) {
			let result = result * x;
			let i = i + 1;
		}
		
		return result;
	}

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
		return;
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
		return;
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
		return;
    }
}
