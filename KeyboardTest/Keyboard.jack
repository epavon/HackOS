// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
	
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
				
		return Memory.peek(24576);		
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char result;
		
		do Output.printChar(0);
		while(Keyboard.keyPressed() = 0) { }
		let result = Keyboard.keyPressed();
		while(~(Keyboard.keyPressed() = 0)) { }
		do Output.backSpace();
		do Output.printChar(result); // this function also advances cursor		
		
		return result;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String result;
		var char ch;
		let result = String.new(63);
		
		do Output.printString(message);
		while(true) {
			let ch = Keyboard.readChar();
			
			if(ch = 128) {				
				
				return result;
			}
			else {
				if(ch = 129) {										
					// backspace will be output by readChar
					do result.eraseLastChar();					
					
				} else {					
					let result = result.appendChar(ch);						
				}
			}
		}			
		
		return result;		
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var int result;
		var boolean stillNumber, firstCharRead, isNegative;
		var char ch;
		
		let result = 0;		
		let stillNumber = true;
		let firstCharRead = false;
		
		do Output.printString(message);
		while(true) {
			let ch = Keyboard.readChar();					
			
			if(ch = 128) {								
				return result;
			}	
			if( (ch > 47) & (ch < 58) ) {				
				if(stillNumber) {
					if(~isNegative) {
						let result = (result * 10) + (ch - 48);					
					}
					else {
						let result = (result * 10) - (ch - 48);
					}
				}				
			}
			else {
				if(ch = 129) {	// backsapce
					// backspace will be output by readChar
					if(stillNumber) {
						let result = result / 10;					
					}
				}
				else {
					if(ch = 45) { // -
						if(firstCharRead) {
							let isNegative = true; 
						} 
						else {
							let stillNumber = false;
						}
					} 
					else {
						let stillNumber = false;
					}
					
				}
			}			
			
			let firstCharRead = true;			
		}		
	
		return 0;
    }
}
